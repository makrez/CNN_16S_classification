{"lr": 0.0001, "n_epoch": 50, "train_loss": 279629.01401388086, "valid_loss": 277936.85589531093, "model_architecture": "DataParallel(\n  (module): ConvVAE(\n    (encoder): Sequential(\n      (0): Conv1d(6, 16, kernel_size=(3,), stride=(1,), padding=(1,))\n      (1): ReLU()\n      (2): Conv1d(16, 32, kernel_size=(3,), stride=(2,), padding=(1,))\n      (3): ReLU()\n      (4): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (5): Conv1d(32, 12, kernel_size=(3,), stride=(1,), padding=(1,))\n      (6): ReLU()\n      (7): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (8): Conv1d(12, 8, kernel_size=(10,), stride=(1,), padding=(1,))\n      (9): ReLU()\n      (10): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (11): Conv1d(8, 4, kernel_size=(5,), stride=(1,), padding=(1,))\n      (12): ReLU()\n      (13): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n      (14): Flatten(start_dim=1, end_dim=-1)\n      (15): Linear(in_features=6236, out_features=1200, bias=True)\n      (16): ReLU()\n      (17): Linear(in_features=1200, out_features=600, bias=True)\n      (18): ReLU()\n    )\n    (fc_mu): Linear(in_features=600, out_features=10, bias=True)\n    (fc_logvar): Linear(in_features=600, out_features=10, bias=True)\n    (decoder): Sequential(\n      (0): Linear(in_features=10, out_features=600, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=600, out_features=1200, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=1200, out_features=6236, bias=True)\n      (5): ReLU()\n      (6): Unflatten(dim=1, unflattened_size=(4, 1559))\n      (7): ConvTranspose1d(4, 8, kernel_size=(5,), stride=(1,), padding=(1,))\n      (8): ReLU()\n      (9): Upsample(scale_factor=2.0, mode='nearest')\n      (10): ConvTranspose1d(8, 12, kernel_size=(10,), stride=(1,), padding=(2,))\n      (11): ReLU()\n      (12): Upsample(scale_factor=2.0, mode='nearest')\n      (13): ConvTranspose1d(12, 32, kernel_size=(3,), stride=(1,), padding=(2,))\n      (14): ReLU()\n      (15): Upsample(scale_factor=2.0, mode='nearest')\n      (16): ConvTranspose1d(32, 16, kernel_size=(3,), stride=(2,), padding=(3,))\n      (17): ReLU()\n      (18): Upsample(scale_factor=2.0, mode='nearest')\n      (19): ConvTranspose1d(16, 6, kernel_size=(3,), stride=(1,), padding=(4,))\n      (20): Sigmoid()\n    )\n  )\n)", "batch_size": 64}